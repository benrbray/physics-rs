[package]
name = "wasm-physics"
version = "0.1.0"
authors = ["Benjamin Bray <benrbray@gmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.84"
js-sys = "0.3.69"
glow = "0.13.1"
nalgebra = "0.32.5"
rand = { version = "0.6.5", features = ["wasm-bindgen"] }
specs-derive = "*"
serde = { version = "1.0", features = ["derive"] }
serde-wasm-bindgen = "0.4"
slotmap = { version = "1.0" }
ordered-float = { version = "4.2.2" }

[dependencies.bevy_ecs]
version = "0.16.1"

# shred does not yet work in wasm, so we must
# disable the "parallel" feature of specs
# (see https://github.com/slide-rs/specs/pull/495)
# TODO (Ben @ 2024/08/05) reenable when not targeting wasm
[dependencies.specs]
version = "0.20.0"
default-features = false
features = ["shred-derive"]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
[dependencies.console_error_panic_hook]
version = "0.1.7"
optional = true

[dependencies.web-sys]
version = "0.3.4"
features = [
  'Document',
  'Element',
  'Event',
  'EventTarget',
  'HtmlCanvasElement',
  'InputEvent',
  'KeyboardEvent',
  'MouseEvent',
  'WebGlBuffer',
  'WebGlVertexArrayObject',
  'WebGl2RenderingContext',
  'WebGlProgram',
  'WebGlShader',
  'WheelEvent',
  'Window',
]

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[lints.clippy]
needless_return = "allow"
new_without_default = "allow"

####
#### https://bevyengine.org/learn/quick-start/getting-started/setup/#cargo-workspaces
#### When releasing for web, you can pass --profile wasm-release to cargo instead of --release.
#### See also wasm-opt

# Enable more optimization in the release profile at the cost of compile time.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"

# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.wasm-release]
# Default to release profile values.
inherits = "release"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"


# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3
